package com.yangyao.backoffice.web.controller;import com.yangyao.backoffice.model.Carparkingdata;import com.yangyao.backoffice.service.CarparkingdataService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.ResponseBody;import javax.jws.WebParam;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.Date;import java.util.List;@Controller@RequestMapping(value = "carparkingdata")public class carparkingdataController {    @Autowired    private CarparkingdataService carparkingdataService;    @RequestMapping(value = "list")    public String list(Model model){        List<Carparkingdata> list=carparkingdataService.findAllCarparkingdata();        model.addAttribute("list",list);        return "carparkingdata/list";    }    @RequestMapping("toImg")    public String toImg(){        return "carparkingdata/img";    }    @RequestMapping("img")    public @ResponseBody List<Carparkingdata> img(){        List<Carparkingdata> list=carparkingdataService.findAllCarparkingdata();        return list;    }    @RequestMapping("edit")    public String edit(@RequestParam(value = "devid",required =true ) String devid,Model model){        Carparkingdata data=carparkingdataService.findByDevid(devid);        model.addAttribute("data",data);        return "carparkingdata/edit";    }    @RequestMapping("saveOrUpdate")    public String saveOrUpdate(Carparkingdata carparkingdata, Model model,String rec,String zt) throws ParseException {        int result=0;        carparkingdata.setRecTime(rec);        carparkingdata.setZtChangeTime(zt);        result=carparkingdataService.saveOrUpdate(carparkingdata);        model.addAttribute("result",result);        System.out.println("result:"+result);        return "redirect:list.do";    }    @RequestMapping("deleteByDevid")    public String deleteByDevid(String devid, Model model){        int result=carparkingdataService.deleteByID(Integer.parseInt(devid));        System.out.println("鍒犻櫎锛�"+result);        model.addAttribute("result",result);        return "redirect:list.do";    }    @RequestMapping("toAdd")    public String toAdd(Model model){        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");        String date = sdf.format(new Date());        model.addAttribute("rectime",date.toString());        return "carparkingdata/add";    }}